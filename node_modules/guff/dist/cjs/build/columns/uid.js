'use strict'

var _interopRequireWildcard = require('@babel/runtime/helpers/interopRequireWildcard')

exports.__esModule = true
exports.up = up
exports.args = exports.after = exports.down = void 0

var _utils = require('../../utils')

var _createUID = _interopRequireWildcard(require('../createUID'))

async function up(knex, name, opt) {
  if (opt.hasOwnProperty('primary')) {
    await (0, _createUID.createKnownUIDTable)(knex)
  }

  return (0, _createUID.default)(knex, typeof opt === 'object' ? opt : void 0)
}

const down = (knex, {table, name}) =>
  (0, _createUID.dropKnownUIDTrigger)(knex, table, name)

exports.down = down

const after = (knex, {name, table, primary}) =>
  primary !== void 0 && (0, _createUID.createKnownUIDTrigger)(knex, table, name)

exports.after = after
const args = {
  bigInteger: (knex, name) => name,
  defaultTo: (knex, name, opt) =>
    (0, _utils.client)(knex).raw(
      `${(opt && opt.funcName) || 'guff_uid'}(?)`,
      opt && opt.shardID ? opt.shardID : 1
    ),
  comment: (0, _utils.trimAll)(`
    Creates a 64-bit universally unique id. This is accomplished by
    calculating a 41-bit representation of the milliseconds from a given
    start epoch, using a 13-bit representation of the ID number of the
    shard, and a 10-bit representation of a global ID sequence for a given
    schema.
  `),
}
exports.args = args
