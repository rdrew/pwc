'use strict'

var _interopRequireWildcard = require('@babel/runtime/helpers/interopRequireWildcard')

exports.__esModule = true
exports.down = exports.after = exports.args = void 0

var _utils = require('../../utils')

var _trigger = _interopRequireWildcard(require('../trigger'))

var _func = _interopRequireWildcard(require('../func'))

const args = {
  timestamp: (knex, name) => name,
  defaultTo: knex => (0, _utils.client)(knex).raw(`NOW()`),
  notNullable: [],
}
exports.args = args
const updateTrigger = `
BEGIN
  NEW.:updateFieldName: = now();
  RETURN NEW;
END;
`

const after = async (knex, {name, table}) => {
  const fn = (0, _func.default)(knex, `guff_update_${name}`)
    .body(updateTrigger, {
      updateFieldName: name,
    })
    .returnsTrigger()
  await fn
  return await (0, _trigger.default)(fn)
    .on(table)
    .eachRow()
    .before()
    .update()
}

exports.after = after

const down = async (knex, {name, table}) => {
  name = `guff_update_${name}`
  const trigger = await (0, _trigger.dropTrigger)(knex, `${name}_trigger`)
    .on(table)
    .ifExists()
    .cascade()
  await (0, _func.dropFunc)(knex, name)
    .ifExists()
    .cascade()
  return trigger
}

exports.down = down
