import emptyArr from 'empty/array'
import {schema, log} from '../utils'
import getSchemaName from './getSchemaName'


export default async function createTable (knex, tableName, columns) {
  let tableColumns

  await Promise.all(columns.map(c => c.setKnex(knex))).then(
    cols => {
      return schema(knex).hasTable(tableName).then(
        exists => {
          if (exists === false) {
            return schema(knex).createTable(
              tableName,
              t => tableColumns = cols.map(c => c(t))
            ).then(
              r => {
                log.success('created table:', tableName)
                return r
              }
            )
          }
          else {
            log('table already exists:', tableName)
            return exists
          }
        }
      )
    }
  )

  if (tableColumns !== void 0) {
    await Promise.all(tableColumns.map(c => c.after()))
  }

  return tableColumns || emptyArr
}

export async function dropTable (knex, tableName, columns = emptyArr) {
  await Promise.all(columns.map(c => c.setKnex(knex).down(tableName)))
  return knex.schema.dropTableIfExists(tableName).then(
    r => {
      log.success('dropped table:', tableName)
      return r
    }
  )
}
